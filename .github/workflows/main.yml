name: RDP

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Enable RDP and Configure Firewall
        run: |
          # تفعيل RDP
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force

          # تعطيل NLA لتسهيل الاتصال
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "SecurityLayer" -Value 0 -Force

          # السماح للمنفذ 3389 في الجدار الناري
          netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389

          # إعادة تشغيل خدمة RDP
          Restart-Service -Name TermService -Force

      - name: Create RDP User
        run: |
          $username = "RDP"
          $password = -join ((33..126) | Get-Random -Count 12 | ForEach-Object {[char]$_})
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force

          # إنشاء المستخدم وإضافته إلى المجموعات
          New-LocalUser -Name $username -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member $username
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username

          echo "RDP_USER=$username" >> $env:GITHUB_ENV
          echo "RDP_PASS=$password" >> $env:GITHUB_ENV

      - name: Install ngrok
        run: |
          Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile "$env:TEMP\ngrok.zip"
          Expand-Archive "$env:TEMP\ngrok.zip" -DestinationPath "$env:ProgramData\ngrok" -Force
          setx PATH "$env:PATH;$env:ProgramData\ngrok"

      - name: Authenticate ngrok
        run: |
          & "$env:ProgramData\ngrok\ngrok.exe" authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Start ngrok Tunnel
        run: |
          Start-Process -FilePath "$env:ProgramData\ngrok\ngrok.exe" `
                        -ArgumentList "tcp 3389 --log=stdout > ngrok.log" -NoNewWindow
          Start-Sleep -Seconds 15

          $tunnelInfo = Invoke-RestMethod -Uri "http://127.0.0.1:4040/api/tunnels"
          $publicUrl = ($tunnelInfo.tunnels.public_url | Where-Object {$_ -like "tcp*"})
          echo "NGROK_TCP=$publicUrl" >> $env:GITHUB_ENV

      - name: Show Connection Info
        run: |
          Write-Host "==========================================="
          Write-Host "✅ RDP is ready!"
          Write-Host "Connect using the info below:"
          Write-Host ""
          Write-Host "🔗 RDP Address: $env:NGROK_TCP"
          Write-Host "👤 Username: $env:RDP_USER"
          Write-Host "🔑 Password: $env:RDP_PASS"
          Write-Host ""
          Write-Host "Use Microsoft Remote Desktop to connect."
          Write-Host "==========================================="

      - name: Keep Session Alive
        run: |
          while ($true) {
            Write-Host "[$(Get-Date)] RDP session running..."
            Start-Sleep -Seconds 300
          }
